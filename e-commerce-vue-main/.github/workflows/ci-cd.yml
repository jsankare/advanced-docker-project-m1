name: CI/CD Pipeline with Security

on:
  push:
    branches: [ main, develop ]

env:
  REGISTRY: docker.io
  IMAGE_PREFIX: ${{ secrets.DOCKER_USERNAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - { name: "frontend", path: "frontend" }
          - { name: "auth-service", path: "services/auth-service" }
          - { name: "product-service", path: "services/product-service" }
          - { name: "order-service", path: "services/order-service" }
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Build and Push ${{ matrix.service.name }}
        run: |
          cd ${{ matrix.service.path }}
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/ecommerce-${{ matrix.service.name }}:latest .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/ecommerce-${{ matrix.service.name }}:latest

  # Scan de sécurité du code source
  security-scan-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner on code
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-code-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-code-results.sarif'

  # Scan de sécurité des images Docker
  security-scan-images:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: [frontend, auth-service, product-service, order-service]
    
    steps:
      - name: Run Trivy vulnerability scanner on Docker images
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/ecommerce-${{ matrix.service }}:latest'
          format: 'sarif'
          output: 'trivy-${{ matrix.service }}-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-${{ matrix.service }}-results.sarif'
      
      - name: Show scan summary for ${{ matrix.service }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/ecommerce-${{ matrix.service }}:latest'
          format: 'table'

  # Tests unitaires (bonus)
  test-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth-service, product-service, order-service]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: services/${{ matrix.service }}/package-lock.json
      
      - name: Install dependencies
        run: |
          cd services/${{ matrix.service }}
          npm ci
      
      - name: Run tests for ${{ matrix.service }}
        run: |
          cd services/${{ matrix.service }}
          npm test
        env:
          NODE_ENV: test