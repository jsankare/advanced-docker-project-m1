version: '3.8'

services:
  auth-service:
    image: lucasratiaray/ecommerce-auth-service:{TAG:-latest}
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          memory: ${PROD_SERVICE_MEMORY_LIMIT:-256M}
          cpus: ${PROD_SERVICE_CPU_LIMIT:-0.25}
        reservations:
          memory: ${PROD_SERVICE_MEMORY_RESERVATION:-128M}
          cpus: ${PROD_SERVICE_CPU_RESERVATION:-0.1}
    secrets:
      - mongodb_uri_auth
      - jwt_secret
    environment:
      - NODE_ENV=production
      - PORT=3001
    networks:
      - backend
    depends_on:
      - mongodb

  product-service:
    image: lucasratiaray/ecommerce-product-service:{TAG:-latest}
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          memory: ${PROD_SERVICE_MEMORY_LIMIT:-256M}
          cpus: ${PROD_SERVICE_CPU_LIMIT:-0.25}
        reservations:
          memory: ${PROD_SERVICE_MEMORY_RESERVATION:-128M}
          cpus: ${PROD_SERVICE_CPU_RESERVATION:-0.1}
    secrets:
      - mongodb_uri_products
      - jwt_secret
    environment:
      - NODE_ENV=production
      - PORT=3002
    networks:
      - backend
    depends_on:
      - mongodb

  order-service:
    image: lucasratiaray/ecommerce-order-service:${TAG:-latest}
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          memory: ${PROD_SERVICE_MEMORY_LIMIT:-256M}
          cpus: ${PROD_SERVICE_CPU_LIMIT:-0.25}
        reservations:
          memory: ${PROD_SERVICE_MEMORY_RESERVATION:-128M}
          cpus: ${PROD_SERVICE_CPU_RESERVATION:-0.1}
    secrets:
      - mongodb_uri_orders
      - jwt_secret
    environment:
      - NODE_ENV=production
      - PORT=3003
    networks:
      - backend
    depends_on:
      - mongodb

  frontend:
    image: lucasratiaray/ecommerce-frontend:${TAG:-latest}
    ports:
      - "80:80"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          memory: ${PROD_FRONTEND_MEMORY_LIMIT:-512M}
          cpus: ${PROD_FRONTEND_CPU_LIMIT:-0.5}
        reservations:
          memory: ${PROD_FRONTEND_MEMORY_RESERVATION:-256M}
          cpus: ${PROD_FRONTEND_CPU_RESERVATION:-0.25}
    environment:
      - NODE_ENV=production
      - VITE_AUTH_SERVICE_URL=http://auth-service:3001
      - VITE_PRODUCT_SERVICE_URL=http://product-service:3002
      - VITE_ORDER_SERVICE_URL=http://order-service:3003
    networks:
      - frontend
      - backend
    depends_on:
      - auth-service
      - product-service
      - order-service

  mongodb:
    image: mongo:4.4
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          memory: ${PROD_MONGO_MEMORY_LIMIT:-1G}
          cpus: ${PROD_MONGO_CPU_LIMIT:-1.0}
        reservations:
          memory: ${PROD_MONGO_MEMORY_RESERVATION:-512M}
          cpus: ${PROD_MONGO_CPU_RESERVATION:-0.5}
    volumes:
      - mongodb_data:/data/db
    secrets:
      - mongodb_root_password
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/mongodb_root_password
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  
  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints: [node.role == manager]

secrets:
  mongodb_root_password:
    file: ./secrets/mongodb_root_password.txt
  jwt_secret:
    file: ./secrets/jwt_secret.txt
  mongodb_uri_auth:
    file: ./secrets/mongodb_uri_auth.txt
  mongodb_uri_products:
    file: ./secrets/mongodb_uri_products.txt
  mongodb_uri_orders:
    file: ./secrets/mongodb_uri_orders.txt

networks:
  frontend:
    driver: overlay
  backend:
    driver: overlay

volumes:
  mongodb_data: